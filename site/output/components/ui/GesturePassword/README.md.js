webpackJsonp([27],{479:function(n,s){n.exports={content:["article",["h1","react-native-smart-gesture-password"],["p",["a",{title:null,href:"https://www.npmjs.com/package/react-native-smart-gesture-password"},["img",{title:null,src:"https://img.shields.io/npm/v/react-native-smart-gesture-password.svg",alt:"npm"}]],"\n",["a",{title:null,href:"https://www.npmjs.com/package/react-native-smart-gesture-password"},["img",{title:null,src:"https://img.shields.io/npm/dm/react-native-smart-gesture-password.svg",alt:"npm"}]],"\n",["a",{title:null,href:"https://www.npmjs.com/package/react-native-smart-gesture-password"},["img",{title:null,src:"https://img.shields.io/npm/dt/react-native-smart-gesture-password.svg",alt:"npm"}]],"\n",["a",{title:null,href:"https://github.com/react-native-component/react-native-smart-gesture-password/blob/master/LICENSE"},["img",{title:null,src:"https://img.shields.io/npm/l/react-native-smart-gesture-password.svg",alt:"npm"}]]],["p","A smart gesture password locker for react-native apps, written in JS for cross-platform support.\nIt works on iOS and Android."],["p","This component is compatible with React Native 0.25 and newer."],["h2","Preview"],["p",{type:"imageReference",identifier:"1",referenceType:"full",alt:"react-native-smart-gesture-password-preview-ios",position:{start:{line:15,column:1,offset:861},end:{line:15,column:54,offset:914},indent:[]}},"\n",{type:"imageReference",identifier:"2",referenceType:"full",alt:"react-native-smart-gesture-password-preview-android",position:{start:{line:16,column:1,offset:915},end:{line:16,column:58,offset:972},indent:[]}}],["h2","Installation"],["pre",{lang:null,highlighted:'npm install react<span class="token operator">-</span>native<span class="token operator">-</span>smart<span class="token operator">-</span>gesture<span class="token operator">-</span>password <span class="token operator">-</span><span class="token operator">-</span>save'},["code","npm install react-native-smart-gesture-password --save"]],["h2","Full Demo"],["p","see ",["span","ReactNativeComponentDemos"]],["h2","Usage"],["p","Install the GesturePassword from npm with ",["code","npm install react-native-smart-gesture-password --save"],".\nThen, require it from your app's JavaScript files with ",["code","import GesturePassword from 'react-native-smart-gesture-password'"],"."],["pre",{lang:"js",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    Component<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span>\n    StyleSheet<span class="token punctuation">,</span>\n    Alert<span class="token punctuation">,</span>\n    View<span class="token punctuation">,</span>\n    Text<span class="token punctuation">,</span>\n    Dimensions<span class="token punctuation">,</span>\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react-native\'</span>\n\n<span class="token keyword">import</span> GesturePassword <span class="token keyword">from</span> <span class="token string">\'../../react-native-smart-gesture-password\'</span>\n<span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'../../react-native-smart-button\'</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">gesturePasswordDemo</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>\n\n    <span class="token comment" spellcheck="true">// \u6784\u9020</span>\n    constructor <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment" spellcheck="true">// \u521d\u59cb\u72b6\u6001</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token punctuation">{</span>\n            isWarning<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            message<span class="token punctuation">:</span> <span class="token string">\'Verify your gesture password\'</span><span class="token punctuation">,</span>\n            messageColor<span class="token punctuation">:</span> <span class="token string">\'#A9A9A9\'</span><span class="token punctuation">,</span>\n            password<span class="token punctuation">:</span> <span class="token string">\'\'</span><span class="token punctuation">,</span>\n            thumbnails<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_cachedPassword <span class="token operator">=</span> <span class="token string">\'\'</span>\n    <span class="token punctuation">}</span>\n\n    componentDidMount <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>_cachedPassword <span class="token operator">=</span> <span class="token string">\'13457\'</span> <span class="token comment" spellcheck="true">//get cached gesture password</span>\n    <span class="token punctuation">}</span>\n\n    render <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>GesturePassword\n                style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>paddingTop<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token operator">+</span> <span class="token number">44</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span>\n                pointBackgroundColor<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'#F4F4F4\'</span><span class="token punctuation">}</span>\n                isWarning<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>isWarning<span class="token punctuation">}</span>\n                color<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'#A9A9A9\'</span><span class="token punctuation">}</span>\n                activeColor<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'#00AAEF\'</span><span class="token punctuation">}</span>\n                warningColor<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'red\'</span><span class="token punctuation">}</span>\n                warningDuration<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">1500</span><span class="token punctuation">}</span>\n                allowCross<span class="token operator">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span>\n                topComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_renderDescription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                bottomComponent<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_renderActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                onFinish<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onFinish<span class="token punctuation">}</span>\n                onReset<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>_onReset<span class="token punctuation">}</span>\n            <span class="token operator">/</span><span class="token operator">></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    _renderThumbnails <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> thumbnails <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">9</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> active <span class="token operator">=</span> <span class="token operator">~</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>password<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>\n            thumbnails<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span>\n                <span class="token operator">&lt;</span>View\n                    key<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">\'thumb-\'</span> <span class="token operator">+</span> i<span class="token punctuation">}</span>\n                    style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n                        <span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> margin<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> borderRadius<span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n                        active <span class="token operator">?</span> <span class="token punctuation">{</span>backgroundColor<span class="token punctuation">:</span> <span class="token string">\'#00AAEF\'</span><span class="token punctuation">}</span> <span class="token punctuation">:</span> <span class="token punctuation">{</span>borderWidth<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> borderColor<span class="token punctuation">:</span> <span class="token string">\'#A9A9A9\'</span><span class="token punctuation">}</span>\n                    <span class="token punctuation">]</span><span class="token punctuation">}</span>\n                <span class="token operator">/</span><span class="token operator">></span>\n            <span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token number">38</span><span class="token punctuation">,</span> flexDirection<span class="token punctuation">:</span> <span class="token string">\'row\'</span><span class="token punctuation">,</span> flexWrap<span class="token punctuation">:</span> <span class="token string">\'wrap\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token punctuation">{</span>thumbnails<span class="token punctuation">}</span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    _renderDescription <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>View style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>height<span class="token punctuation">:</span> <span class="token number">158</span><span class="token punctuation">,</span> paddingBottom<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> justifyContent<span class="token punctuation">:</span> <span class="token string">\'flex-end\'</span><span class="token punctuation">,</span> alignItems<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_renderThumbnails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n                <span class="token operator">&lt;</span>Text\n                    style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>fontFamily<span class="token punctuation">:</span> <span class="token string">\'.HelveticaNeueInterface-MediumP4\'</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span> marginVertical<span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>messageColor<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>message<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>Text<span class="token operator">></span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    _renderActions <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token punctuation">(</span>\n            <span class="token operator">&lt;</span>View\n                style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>position<span class="token punctuation">:</span> <span class="token string">\'absolute\'</span><span class="token punctuation">,</span> bottom<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> flex<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span> justifyContent<span class="token punctuation">:</span> <span class="token string">\'space-between\'</span><span class="token punctuation">,</span> flexDirection<span class="token punctuation">:</span> <span class="token string">\'row\'</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> Dimensions<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">\'window\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n                <span class="token operator">&lt;</span>Button\n                    style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n                    textStyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">\'#A9A9A9\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n                    Forget password\n                <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n                <span class="token operator">&lt;</span>Button\n                    style<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> margin<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">40</span><span class="token punctuation">,</span> justifyContent<span class="token punctuation">:</span> <span class="token string">\'center\'</span><span class="token punctuation">,</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n                    textStyle<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>fontSize<span class="token punctuation">:</span> <span class="token number">14</span><span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token string">\'#A9A9A9\'</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">></span>\n                    Login other accounts\n                <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>\n            <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n        <span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    _onReset <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> isWarning <span class="token operator">=</span> <span class="token boolean">false</span>\n        <span class="token comment" spellcheck="true">//let password = \'\'</span>\n        <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">\'Verify your gesture password\'</span>\n        <span class="token keyword">let</span> messageColor <span class="token operator">=</span> <span class="token string">\'#A9A9A9\'</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            isWarning<span class="token punctuation">,</span>\n            <span class="token comment" spellcheck="true">//password,</span>\n            message<span class="token punctuation">,</span>\n            messageColor<span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n    _onFinish <span class="token operator">=</span> <span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_cachedPassword<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> isWarning <span class="token operator">=</span> <span class="token boolean">false</span>\n            <span class="token keyword">let</span> message <span class="token operator">=</span> <span class="token string">\'Verify succeed\'</span>\n            <span class="token keyword">let</span> messageColor <span class="token operator">=</span> <span class="token string">\'#00AAEF\'</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                isWarning<span class="token punctuation">,</span>\n                password<span class="token punctuation">,</span>\n                message<span class="token punctuation">,</span>\n                messageColor<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">let</span> isWarning <span class="token operator">=</span> <span class="token boolean">true</span>\n            <span class="token keyword">let</span> message\n            <span class="token keyword">let</span> messageColor <span class="token operator">=</span> <span class="token string">\'red\'</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>password<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                message <span class="token operator">=</span> <span class="token string">\'Need to link at least 4 points\'</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                message <span class="token operator">=</span> <span class="token string">\'Verify failed\'</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n                isWarning<span class="token punctuation">,</span>\n                password<span class="token punctuation">,</span>\n                message<span class="token punctuation">,</span>\n                messageColor<span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n        Alert<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">\'password is \'</span> <span class="token operator">+</span> password<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span>'},["code","import React, {\n    Component,\n} from 'react'\nimport {\n    StyleSheet,\n    Alert,\n    View,\n    Text,\n    Dimensions,\n} from 'react-native'\n\nimport GesturePassword from '../../react-native-smart-gesture-password'\nimport Button from '../../react-native-smart-button'\n\nexport default class gesturePasswordDemo extends Component {\n\n    // \u6784\u9020\n    constructor (props) {\n        super(props);\n        // \u521d\u59cb\u72b6\u6001\n        this.state = {\n            isWarning: false,\n            message: 'Verify your gesture password',\n            messageColor: '#A9A9A9',\n            password: '',\n            thumbnails: [],\n        };\n        this._cachedPassword = ''\n    }\n\n    componentDidMount () {\n        this._cachedPassword = '13457' //get cached gesture password\n    }\n\n    render () {\n        return (\n            <GesturePassword\n                style={{paddingTop: 20 + 44,}}\n                pointBackgroundColor={'#F4F4F4'}\n                isWarning={this.state.isWarning}\n                color={'#A9A9A9'}\n                activeColor={'#00AAEF'}\n                warningColor={'red'}\n                warningDuration={1500}\n                allowCross={true}\n                topComponent={this._renderDescription()}\n                bottomComponent={this._renderActions()}\n                onFinish={this._onFinish}\n                onReset={this._onReset}\n            />\n        )\n    }\n\n    _renderThumbnails () {\n        let thumbnails = []\n        for (let i = 0; i < 9; i++) {\n            let active = ~this.state.password.indexOf(i)\n            thumbnails.push((\n                <View\n                    key={'thumb-' + i}\n                    style={[\n                        {width: 8, height: 8, margin: 2, borderRadius: 8, },\n                        active ? {backgroundColor: '#00AAEF'} : {borderWidth: 1, borderColor: '#A9A9A9'}\n                    ]}\n                />\n            ))\n        }\n        return (\n            <View style={{width: 38, flexDirection: 'row', flexWrap: 'wrap'}}>\n                {thumbnails}\n            </View>\n        )\n    }\n\n    _renderDescription = () => {\n        return (\n            <View style={{height: 158, paddingBottom: 10, justifyContent: 'flex-end', alignItems: 'center',}}>\n                {this._renderThumbnails()}\n                <Text\n                    style={{fontFamily: '.HelveticaNeueInterface-MediumP4', fontSize: 14, marginVertical: 6, color: this.state.messageColor}}>{this.state.message}</Text>\n            </View>\n        )\n    }\n\n    _renderActions = () => {\n        return (\n            <View\n                style={{position: 'absolute', bottom: 0, flex:1, justifyContent: 'space-between', flexDirection: 'row', width: Dimensions.get('window').width, }}>\n                <Button\n                    style={{ margin: 10, height: 40, justifyContent: 'center', }}\n                    textStyle={{fontSize: 14, color: '#A9A9A9'}}>\n                    Forget password\n                </Button>\n                <Button\n                    style={{ margin: 10, height: 40, justifyContent: 'center', }}\n                    textStyle={{fontSize: 14, color: '#A9A9A9'}}>\n                    Login other accounts\n                </Button>\n            </View>\n        )\n    }\n\n    _onReset = () => {\n        let isWarning = false\n        //let password = ''\n        let message = 'Verify your gesture password'\n        let messageColor = '#A9A9A9'\n        this.setState({\n            isWarning,\n            //password,\n            message,\n            messageColor,\n        })\n    }\n\n    _onFinish = (password) => {\n        if (password === this._cachedPassword) {\n            let isWarning = false\n            let message = 'Verify succeed'\n            let messageColor = '#00AAEF'\n            this.setState({\n                isWarning,\n                password,\n                message,\n                messageColor,\n            })\n        }\n        else {\n            let isWarning = true\n            let message\n            let messageColor = 'red'\n            if (password.length < 4) {\n                message = 'Need to link at least 4 points'\n            }\n            else {\n                message = 'Verify failed'\n            }\n            this.setState({\n                isWarning,\n                password,\n                message,\n                messageColor,\n            })\n        }\n        Alert.alert('password is ' + password)\n    }\n\n}"]],["h2","Props"],["table",["thead",["tr",["th","Prop"],["th","Type"],["th","Optional"],["th","Default"],["th","Description"]]],["tbody",["tr",["td","pointBackgroundColor"],["td","string"],["td","Yes"],["td","'transparent'"],["td","determine bgcolor of gesture point"]],["tr",["td","gestureAreaLength"],["td","number"],["td","Yes"],["td","222"],["td","determine width and height of gesture area"]],["tr",["td","color"],["td","string"],["td","Yes"],["td","'#A9A9A9'"],["td","determine color of normal gesture point"]],["tr",["td","activeColor"],["td","string"],["td","Yes"],["td","'#00AAEF'"],["td","determine color of active gesture point"]],["tr",["td","warningColor"],["td","string"],["td","Yes"],["td","'red'"],["td","determine color of warning gesture point"]],["tr",["td","lineColor"],["td","string"],["td","Yes"],["td"],["td","determine color of line, if does not set this, the color of line will be the same as gesture point"]],["tr",["td","lineWidth"],["td","string"],["td","Yes"],["td","1"],["td","determine width of line"]],["tr",["td","warningDuration"],["td","number"],["td","Yes"],["td","1500"],["td","determine duration when gesture status is warning"]],["tr",["td","topComponent"],["td","element"],["td","Yes"],["td"],["td","determine the presentation above gesture area"]],["tr",["td","bottomCompont"],["td","element"],["td","Yes"],["td"],["td","determine the presentation below gesture area"]],["tr",["td","isWarning"],["td","bool"],["td","Yes"],["td","false"],["td","determine gesture warning status"]],["tr",["td","showArrow"],["td","bool"],["td","Yes"],["td","true"],["td","determine whether show arrow in point"]],["tr",["td","allowCross"],["td","bool"],["td","Yes"],["td","true"],["td","determine whether allow a line cross a point"]],["tr",["td","onStart"],["td","func"],["td","Yes"],["td"],["td","determine the listener which is called before gesture is granted"]],["tr",["td","onReset"],["td","func"],["td","Yes"],["td"],["td","determine the listener which is called after gesture is reseted"]],["tr",["td","onFinish"],["td","func"],["td","Yes"],["td"],["td","determine the listener which is called after gesture actions is finished"]]]],{type:"definition",identifier:"0",title:null,url:"https://github.com/cyqresig/ReactNativeComponentDemos",position:{start:{line:205,column:1,offset:7634},end:{line:205,column:59,offset:7692},indent:[]}},{type:"definition",identifier:"1",title:null,url:"http://cyqresig.github.io/img/react-native-smart-gesture-password-preview-ios-v1.0.0.gif",position:{start:{line:206,column:1,offset:7693},end:{line:206,column:94,offset:7786},indent:[]}},{type:"definition",identifier:"2",title:null,url:"http://cyqresig.github.io/img/react-native-smart-gesture-password-preview-android-v1.0.0.gif",position:{start:{line:207,column:1,offset:7787},end:{line:207,column:98,offset:7884},indent:[]}}],meta:{filename:"components/ui/GesturePassword/README.md"},toc:["ul",["li",["a",{className:"bisheng-toc-h1",href:"#react-native-smart-gesture-password",title:"react-native-smart-gesture-password"},"react-native-smart-gesture-password"]],["li",["a",{className:"bisheng-toc-h2",href:"#Preview",title:"Preview"},"Preview"]],["li",["a",{className:"bisheng-toc-h2",href:"#Installation",title:"Installation"},"Installation"]],["li",["a",{className:"bisheng-toc-h2",href:"#Full-Demo",title:"Full Demo"},"Full Demo"]],["li",["a",{className:"bisheng-toc-h2",href:"#Usage",title:"Usage"},"Usage"]],["li",["a",{className:"bisheng-toc-h2",href:"#Props",title:"Props"},"Props"]]]}}});